 attr_accessor :password
   # attr_accessible :username, :fname, :lname, :email, :password, :password_confirmation => "must not be emopty"

    validates_presence_of :username, :fname, :lname, :email, :password
    before_save :encrypt_password
    def has_password?(submitted_password)
        password == encrypt(submitted_password)
    end
    def self.authenticate(email,submitted_password)
        user=find_by_email(email)
        return nil if user.nil?
        return user if user.has_password?(sumbitted_password) 
    end
    private
    def encrypt_password
        self.salt = Digest::SHA2.hexadigest("#{Time.now.utc}--#{password}") if self.new_record?
        
        self.encrypted_password=encrypt(password)
    end
    def encrypt(pass)
        Digest::SHA2.hexadigest("#{self.salt}--#{pass}")
    end

resources :sessions, only: [:new, :create, :destroy]
  get  'signup',   to: 'sessions#signup', as: 'signup'
 get  'login',   to: 'sessions#create', as: 'login'
  get  'logout',  to: 'sessions#destroy', as: 'logout'